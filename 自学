1.                  #include <iostream>
                    using namespace std;
                    int main()
                    {
                      float a,b;
                      char op;
                      cout<<"请输入算式：（数1 运算符 数2）"<<'\n';
                      cin>>a>>op>>b;
                      if (op=='+')
                      cout<<a<<op<<b<<"="<<a+b;
                      else if(op=='-')
                      cout<<a<<op<<b<<"="<<a-b;
                      else if(op=='*')
                      cout<<a<<op<<b<<"="<<a*b;
                      else if(op=='/')
                      {if (b)
                      cout<<a<<op<<b<<"=" <<a/b;
                      else 
                      cout<<"错误，除数为0";
                      }
                      else
                      cout<<op<<"无效字符"; 
                      return 0;
		      
                     } 
                     
                     
                     
                     
                     
2.                    #include <iostream>
                      using namespace std;
                      int main()
                      {
                        int s=0,i=1;
                        while (i<=100)
                        {
                          s=s+i;
                          i=i+1;
                        }
                        cout<<"s="<<s;
                        return 0;
                      }  
                      
                      
                      
3.                    #include <iostream>
                      using namespace std;
                      int main()
                      {
                        float i=1.0,s=0,t;
                        while (i<100)
                        {
                          t=1.0/i;
                          s=s+t;
                          i=i+2;
                        }
                        cout<<"s="<<s;
                        return 0;
                      }      
                      
                      
                      
                      
4.                    #include <iostream>
                      #include <cmath>
                      using namespace std;
                      int main()
                      {
                        int i=1,b=1;
                        float s=0,t=1;
                        while (fabs(t)>1e-6)
                        {
                          t=b*1.0/i;
                          s=s+t;
                          i=i+2;
                          b=-b;
                        }
                        cout<<s*4;
                        return 0;
                       }   
                       
                       
                       
                       
                       
                       
5.                    #include <iostream>
                      using namespace std;
                      int main()
                      {
                        int i=1,s=0;
                        do
                        {
                          s=s+i;
                          i=i+1;
                        }while (i<=100);
                        cout<<s;
                        return 0;
                      }    
                      
                      
                      
                      
6.                      #include <iostream>
                        #include <cmath>
                        using namespace std;
                        int main()
                        {
                          float x1,x2,a;
                          cout<<"请输入："; 
                          cin>>a;
                          if (a<0)
                          cout<<"负数，无法开方";
                          else
                          {
                            x1=a/2;
                            do{
                              x2=x1;
                              x1=(x2+a/x2)/2;
                            }while (fabs(x1-x2)>1e-5);
                            cout<<"该数的平方根为；"<<x1;
                          }
                          return 0;
                         }        
                         
                         
                         
                         
             
7.                        #include <iostream>
                          using namespace std;
                          int main()
                          {
                            int a,b,c;
                            for (a=1;a<=4;a=a+1)
                            {
                              for (b=1;b<=4-a;b=b+1)
                              cout<<' ';
                              for (c=1;c<=2*a-1;c=c+1)
                              cout<<'*';
                              cout<<'\n';
                            }
                            for (a=1;a<=3;a++)
                            {
                              for (b=1;b<=a;b++)
                              cout<<' ';
                              for (c=1;c<=2*(3-a)+1;c++)
                              cout<<'*';
                              cout<<'\n';
                            }

                            return 0;
                          }
                          
                   


8.(不能求最小公倍数）       #include <iostream>
                          using namespace std;
                          int main()
                          {
                            float a,b,c,s;
                            int a1,b1,c1;
                            cout<<"请输入三个数：";
                            cin>>a>>b>>c;
                            for (s=a;s<a*b*c;s=s+1)
                            {
                            a1=s/a;
                            b1=s/b;
                            c1=s/c;	
                            if ((s-a*a1==0)&&(s-b*b1==0)&&(s-c*c1==0))
                            break;
                            }
                            cout<<a<<','<<b<<','<<c<<"的最小公倍数为"<<s;
                            return 0;
                          }
                          
                          
                          
                          
                          
                          
9.                        #include <iostream>
                          using namespace std;
                          int main()
                          {
                            int a,i;
                            cout<<"请输入：";
                            cin>>a;
                            for (i=2;i<a;i++)
                              if(a%i==0)
                              break;
                            if (i>=a)
                            cout<<"为素数";
                            else 
                            cout<<"非素数";
                            return 0;	
                          }                          




10.                         #include <iostream>
                            using namespace std;
                            int main()
                            {	int a;
                              for (a=1;a<=100;a++){
                              if (a%3==0)
                              continue;
                              cout<<a<<'\t';
                              }
                              return 0;
                             } 




11.              #include <iostream>
                using namespace std;
                #define PI 3.1415926535 
                int main()
                {	double s;
                  double r;
                  cin>>r;
                  s=PI*r*r;
                  cout<<"面积="<<s;
                  return 0; 
                 } 

12.                #include<iostream>
                  using namespace std;
                  int main()
                  {
                    int a;
                    float b;
                    cout<<"请输入变量a and b\n";
                    cin>>a>>b;
                    cout<<a<<'\t'<<b<<endl;
                    return 0;
                  }
13.对着课本硬抄下来的计算器             
                  #include<iostream>
                  using namespace std;
                  double cal(int a,char ch,int b)
                  {
                    double result;
                    if(a==0)
                      throw'x';
                    switch(ch)
                    {
                    case'+':
                      result=a+b;
                      break;
                    case'-':
                      result=a-b;
                      break;
                    case'*':
                      result=a*b;
                      break;
                    case'/':
                      if(b==0)
                        throw 0;
                      result=(double)a/b;
                      break;
                    default:
                      throw "输入错误，请重新输入！\n";
                    }
                    return result;
                  }
                  int main()
                  {
                    int a,b;
                    char ch;
                    while(1)
                    {
                      try
                      {
                        cout<<"请输入算式：";
                        cin>>a>>ch>>b;
                        cout<<a<<ch<<b<<"="<<cal(a,ch,b)<<endl;
                      }
                      catch(int)
                      {
                        cout<<"除数为0！\n";
                      }
                      catch(char*s)
                      {   cout<<s;
                      }
                      catch(...)
                      {   cout<<"谢谢使用！\n";
                        exit(0);
                      }
                    }
                    return 0;
                  }



14.                  #include <iostream>
                    using namespace std；
                    int main()
                    {
                      int i=1,s=0;
                      loop:if(i<=100){
                        s=s+i;
                        i++;
                        goto loop;}
                        cout<<"s="<<s; 
                        return 0;
                     } 




15.                    #include <iostream>
                      using namespace std;
                      int main()
                      {
                        double e=1.0,i=1.0;
                        int n=1;
                        while (i>=1e-7)
                        {
                          i=i/n;
                          e=e+i;
                          n++;
                        }
                        cout<<e;
                        return 0;
                      }




16.                      #include <iostream>
                        using namespace std;
                        int main()
                        {
                          double e=1,i=1;
                          int n=1;
                          do
                          {
                            i=i/n;
                            e=e+i;
                            n++;
                          }while (i>=1e-7);
                          cout<<e;
                          return 0;
                        }




17.                      #include <iostream>
                        #include <cstdlib>
                        #include <ctime>
                        using namespace std;
                        int main()
                        {
                          int a,b,op,sum=0;
                          int i,c,d;
                          srand(time(NULL));
                          for (i=1;i<=10;i++)
                          {
                            a=rand()%10;
                            b=rand()%10;
                            op=rand()%3;
                          switch (op)
                          {
                            case 0:cout<<a<<"+"<<b<<"=";
                            c=a+b;break;
                            case 1:cout<<a<<"-"<<b<<"=";
                            c=a-b;break;
                            case 2:cout<<a<<"*"<<b<<"=";
                            c=a*b;break;
                          }
                          cin>>d;
                          if (d==c){
                          cout<<"\n正确！\n";
                          sum=sum+10;}
                          else
                          cout<<"\n错误！\n";
                          }
                          cout<<"答对："<<sum/10<<"题"<<'\n'<<"得分："<<sum;
                          return 0;
                        }





18.                              #include <iostream>
                                using namespace std;
                                int max(int a,int b)
                                {
                                  int c;
                                  c=a>b?a:b;
                                  return c;
                                 } 
                                int main ()
                                {
                                  int x,y,z;
                                  cout<<"请输入：";
                                  cin>>x>>y;
                                  z=max(x,y);
                                  cout<<"较大的数："<<z;
                                  return 0; 
                                }






19.                                #include <iostream>
                                  using namespace std;
                                  void message()
                                  {
                                    cout<<"1.注册\n";
                                    cout<<"2.登录\n";
                                    cout<<"3.取消\n";
                                    cout<<"请输入选择\n";
                                  }
                                  int main()
                                  {
                                    int ch;              //这里用int定义的就是数字，如果用char，定义的就是字符
                                    message ();
                                    cin>>ch;
                                    cout<<"您输入的是："<<ch<<'\n'<<"即将为您执行：";
                                    switch (ch)
                                    {
                                      case 1:cout<<"注册";break;          //如果上面写的是char,这里就应该写case '1',即字符
                                      case 2:cout<<"登录";break;
                                      case 3:cout<<"取消";break; 
                                      default :cout<<"输入错误";break;
                                     } 
                                     return 0;
                                  }
                                  
                                  
                                  
                                  
                                  
                                  
20.  (错误）                      #include <iostream>                                             
				using namespace std;
				float fact(int m)
				{
					int x=1;
					cin>>m;           //错误所在，不能在fact函数里面输入，不然后面的循环会一直执行要求输入数字的操作，无法得到正确结果
					if(m<0)
					cout<<"输入无效！";
					else if(m>=0){
					while (m>=1){
					x=x*m;
					m--; }
					return x;			}
				}
				int main()
				{
					int n,s=0,i=1;
					cout<<"请输入：";
					cin>>n;
					while (i<=n){
					s=s+fact(i);
					i++;}
					cout<<s;
					return 0;
				}
				
				
				
				
				
				
				
21.（半对）                       #include <iostream>
				using namespace std;
				float fact(int m)
				{
					int x=1;
					if(m<0)
					cout<<"输入无效！";
					else if(m>=0){
					while (m>=1){
					x=x*m;
					m--; }
					return x;			}
				}
				int main()
				{
					int n,s=0,i=1;
					cout<<"请输入：";
					cin>>n;
					for (i=1;i<=n;i++)
					s=s+fact(i);
					cout<<s;
					return 0;
				}				



22. （正确）                      #include <iostream>
				using namespace std;
				float fact(int m)
				{
					int x=1;
					if(m>=0){
					while (m>=1){
					x=x*m;
					m--; }
					return x;			}
				}
				int main()
				{
					int n,s=0,i=1;
					cout<<"请输入：";
					cin>>n;
					if (n>=0){
					while (i<=n){
					s=s+fact(i);
					i++;}
					cout<<s;}
					else
					cout<<"输入无效！";
					return 0;
				}









23. （错误）                      #include <iostream>
				using namespace std;
				int l(int a,int b,int c)
				{
					int i;
					for (i=a;i>=1;i--)
					{
						if (a%i==0&&b%i==0&&c%i==0)
						break;
						return i;
					}
				}
				int main()
				{
					int x,y,z,t;
					cout<<"请输入：";
					cin>>x>>y>>z;
					t=l(x,y,z);
					cout<<x<<','<<y<<','<<z<<"的最大公倍数为："<<t;
					return 0;
				}



24. （正确）                      #include <iostream>
				using namespace std;
				int l(int a,int b,int c)
				{
					int i;
					for (i=a;i>=1;i--)
					{
						if (a%i==0&&b%i==0&&c%i==0)
						break;}                //这里大括号位置应该在return前面，不然return就会进入for循环，直接在后面输出
						return i;
				}
				int main()
				{
					int x,y,z,t;
					cout<<"请输入：";
					cin>>x>>y>>z;
					t=l(x,y,z);
					cout<<x<<','<<y<<','<<z<<"的最大公倍数为："<<t;
					return 0;
				}        







25.                                      #include <iostream>
					using namespace std;
					int swap(float& x,float& y)
					{
						float t;
						t=x;
						x=y;
						y=t;
					}
					int main()
					{
						float a,b;
						cout<<"交换前：a="<<'\t'<<"b="<<'\n';
						cin>>a>>b;
						swap(a,b);
						cout<<"交换后：a="<<a<<'\t'<<"b="<<b;
						return 0;
					}






26.                                      #include <iostream>
					using namespace std;
					int X(int m,int k)
					{
						int i,p=1;
						for(i=1;i<=k;i++)
						p=p*m;
						return p;
					}
					int Y(int n,int k)
					{
						int s=0;
						for(int i=1;i<=n;i++)
						s=s+X(i,k);
						return s;
					}
					int main()
					{
						int n,k,s;
						cout<<"请输入n,k的值；";
						cin>>n>>k;
						s=Y(n,k);
						cout<<"1^k+2^k+...+"<<n<<"^k="<<s;
						return 0; 
					}




27.                                     #include <iostream>
					using namespace std;
					int main()
					{
						int a=1,b=2;
						int *p1=&a,*p2=&b; 
						cout<<a<<'\t'<<b<<endl;
						cout<<p1<<'\t'<<p2<<endl;
						cout<<*p1<<'\t'<<*p2<<endl;
						return 0;
					}



28.                     #include <iostream>
			using namespace std;
			int main()
			{
				int a,b;
				cin>>a>>b;
				cout<<"a="<<a<<'\t'<<"b="<<b<<endl;
				int *p1=&a,*p2=&b,*p;
				if(a>b)
				{
					p=p1;
					p1=p2;
					p2=p;
				}
				cout<<"从小到大输出"<<'\n'<<*p1<<'\t'<<*p2<<endl;
				cout<<"a="<<a<<'\t'<<"b="<<b;
			}



29.                     #include <iostream>
			using namespace std;
			int main()
			{
				int a,b;
				cin>>a>>b;
				cout<<"a="<<a<<'\t'<<"b="<<b<<endl;
				int *p1=&a,*p2=&b,t;
				if(a>b)
				{
					t=*p1;
					*p1=*p2;
					*p2=t;
				}
				cout<<"从小到大输出"<<'\n'<<*p1<<'\t'<<*p2<<endl;
				cout<<"a="<<a<<'\t'<<"b="<<b;
			}




30.                     #include <iostream>
			using namespace std;
			int main()
			{
				int a[10]={1,2,3,4,5,6,7,8,9,10},t;
				int *p=a,*q;
				q=p+9;
				while (p<q)
				{
					t=*p;
					*p=*q;
					*q=t;
					p++;
					q--;
				}
				for (int i=0;i<10;i++)
				cout<<a[i]<<'\t'; 
				return 0;
			}



31.                     #include <iostream>
			using namespace std;
			int main()
			{
				int a[10]={1,2,3,4,5,6,7,8,9,10},t;
				int *p=a,*q;
				q=p+9;
				while (p<q)
				{
					t=*p;
					*p=*q;
					*q=t;
					p++;
					q--;
				}
				for (int i=0;i<10;i++)
				cout<<a[i]<<'\t'; 
				return 0;
			}



32.                     #include <iostream>
			using namespace std;
			int main()
			{
				char a[100]={"I like sleeping !"},*p2,*p1;
				p1=&a[0];                                //即将a[0]的位置传到p1，也可以写为：p1=a 
				p2="I like studying !";
				cout<<p1<<endl;
				cout<<p1+2<<endl;                          //从指针位置开始输出字符串 
				cout<<*p1<<endl;                          //表示只输出p1位置对应的字符(单个字符)
				cout<<*(p1+2)<<endl; 
				*p1='W';
				*(p1+1)='e';
				cout<<p1<<endl;
				cout<<*p2<<endl;                                //注意：p2为字符串常量，不可重新赋值
				cout<<*(p2+2)<<endl;
				cout<<p2+2;
				return 0; 
			 } 



33.             #include <iostream>
		using namespace std;
		int main()
		{
			int a[10]={1,2,3},b=1,*p1,*p2,*p3;
			p1=&a[0];
			p2=&b;
			p3=a;
			cout<<p1<<endl;
			cout<<*p1<<endl;
			cout<<p2<<endl;
			cout<<*p2<<endl;
			cout<<p3<<endl;
			cout<<*p3<<endl;                          //根据输出结果可以得知，以指针可以输出整个数组的方法只对字符数组有效 
			char c[10]={"123"},d='4',*p4,*p5,*p6;
			p4=&c[0];
			p5=&d;
			p6=c;
			cout<<p4<<endl;
			cout<<*p4<<endl;
			cout<<p5<<endl;
			cout<<*p5<<endl;
			cout<<p6<<endl;
			cout<<*p6<<endl;   
		}



34.             #include <iostream>
		using namespace std;
		int main()
		{
			char a[100]="I like sleeping!",b[100];
			char *p1=a,*p2=b;
			while(*p1)
			{
				*p2=*p1;
				p1++;
				p2++;
			}
			*p2='\0';
			cout<<b;
			cout<<*(p2-1);
			return 0;
		}




35.             #include <bits/stdc++.h>
		using namespace std;
		int main()
		{
			int a=1; 
			int *const p=&a;             //常指针--无法再改变P指向的位置，即p=&b这样的形式是无法实现的
			const int *p=&a;             //即p是可以改变的，p=&b是正确的，但无法对p进行重新赋值，*p=2不合理 
			const int *const p=a;        //综合上述 
		}



36.             #include <bits/stdc++.h>
		using namespace std;
		int main()
		{
			int n,*p;
			double s=0;
			cout<<"输入学生人数：";
			cin>>n;
			p=new int[n];
			for (int i=0;i<n;i++)
			{
				cout<<"请输入第"<<i+1<<"名学生的成绩：";
				cin>>p[i];
				s+=p[i]; 
			}
			cout<<"平均成绩："<<s/n;
			return 0;
		 } 




37.             #include <bits/stdc++.h>
		using namespace std;
		int change(int *p,int n)
		{
			int *q=p+n-1,t;
			while(q>p)
			{
				t=*p;
				*p=*q;
				*q=t;
				p++;
				q--;
			}
		}
		int main()
		{
			int *p,n,a[100];
			cout<<"输入数组个数：";
			cin>>n;
			cout<<"请输入数组：";
			for (int i=0;i<n;i++)
			{
				cin>>a[i];
			}
			p=&a[0];
			change(p,n);
			for (int i=0;i<n;i++)
			cout<<a[i]<<'\t';
			return 0;
		}



38.             #include <bits/stdc++.h>
		using namespace std;
		int main()
		{
			char a[100];
			int n;
			int b=0,c=0,d=0,e=0,f=0;
			cout<<"输入字符个数：";
			cin>>n;
			cin.get();                                //用该式来接受上面输入的回车键，以免下面的getline误解
			cout<<"请输入一串字符：";                    
			cin.getline(a,n);                        //这里不知道为什么不能输入数据
			cout<<a;
			for (int i=0;i<n;i++)
			{
				if(a[i]>='A'&&a[i]<='Z')
				b++;
				else if(a[i]>='a'&&a[i]<='z')
				c++;
				else if(a[i]==' ')
				d++;
				else if(a[i]>='0'&&a[i]<='9')
				e++;
				else
				f++;
			}
			cout<<"大写字母："<<b<<endl;
			cout<<"小写字母："<<c<<endl;
			cout<<"空格："<<d<<endl;
			cout<<"数字："<<e<<endl;
			cout<<"其他字符："<<f<<endl;
			return 0; 
		}



39.             #include <bits/stdc++.h>
		using namespace std;
		int main()
		{
			char a[100],*p;
			p=&a[0];
			int b=0,c=0,d=0,e=0,f=0;                          
			cout<<"请输入一串字符：";                    
			cin.getline(a,100);                        
			while(*p)
			{
				if(*p>='A'&&*p<='Z')
				b++;
				else if(*p>='a'&&*p<='z')
				c++;
				else if(*p==' ')
				d++;
				else if(*p>='0'&&*p<='9')
				e++;
				else
				f++;
				p++;
			}
			cout<<"大写字母："<<b<<endl;
			cout<<"小写字母："<<c<<endl;
			cout<<"空格："<<d<<endl;
			cout<<"数字："<<e<<endl;
			cout<<"其他字符："<<f<<endl;
			return 0; 
		}




40.             /*
		我国古代难题百鸡问题：鸡翁一，值钱五；鸡母一，值钱三；鸡雏三，值钱一。
		百钱买百鸡，问鸡翁、母、雏各几何？鸡翁数,鸡母数,鸡雏数等可以为零。
		结果保存到out.txt中，
		格式按照
		鸡翁数,鸡母数,鸡雏数顺序排列，中间用逗号隔开，有多组值的话，每组一行。
		(注意分隔符逗号，为英文逗号）
		比如：最后算出的鸡翁数,鸡母数,鸡雏数等为0，25，75。
		则out.txt
		0,25,75
		注意：完善现有代码，不要删除注释语句。 
		---------------------------------------------------------------------------------------------------*/
		/**********Begin**********/
		#include <bits/stdc++.h>
		using namespace std;
		int main()
		{
			ofstream out;
			out.open("out.txt");
			for (int a=0;a<20;a++)
			{
				for (int b=0;b<40;b++)
				{
					for (int c=0;c<300;c++)
					if((a*5+b*3+c/3==100)&&(a+b+c==100)&&(c%3==0))
					out<<a<<","<<b<<","<<c<<endl;
				}
			out.close();
			return 0;
		}
			}





		/**********  End  **********/




41.             /* 求满足条件n!<m的最大数n。
		m为正整数，由in.txt读入, 
		将结果n输出到out.txt文件中。
		如:in.txt
		30
		则:out.txt
		4 
		注意：请勿删除注释语句。 
		---------------------------------------------------------------------------------------------------*/

			/**********  Begin  **********/
		#include <bits/stdc++.h>
		using namespace std;
		int main()
		{
			ifstream in("in.txt");
			ofstream out;
			out.open("out.txt");
			int m,k=1,j=0;
			in>>m;
			for (int i=1;k*i<m;i++)
			{
				k=k*i;
				j++;
			}
			out<<j;
			in.close();
			out.close();
			return 0;
		 } 

			/**********   End  ***********/



42.             /* 
		给3个正整数a、b、c，判断是否是三角形的三条边。是的话，输出为Y,否的话，输出为N 
		三角形三条边满足条件：任意两边之和大于第三边，并且任意两边之差小于第三边。
		a,b,c从in.txt读取，结果输出到out.txt中 
		如:
		in.txt
		3 4 5
		则out.txt
		Y

		注意：请勿删除注释语句。 
		---------------------------------------------------------------------------------------------------*/
			/**********  Begin  **********/
		#include <bits/stdc++.h> 
		using namespace std;
		int main()
		{
			ifstream in("in.txt");
			ofstream out;
			out.open("out.txt");
			int a[3];
			for (int i=0;i<3;i++)
			in>>a[i];
			sort(a,a+3);
			if(a[0]+a[1]>a[2])
			out<<"Y";
			else
			out<<"N";
			in.close();
			out.close();
			return 0; 
		}
			/**********   End  ***********/


43.             /* 在爱尔兰守神节那天，举行每年一度的庆祝游戏，
		指挥者若将乐队排成10人、9人、8人、7人、6人、5人、4人、3人和2人一排时，
		最后的一排总是缺少一个人，
		那些人想这个位置大概是给数月前死去的乐队成员凯西还留着位置。
		指挥者见到总缺一人恼火了，叫大家排成一列纵队前进。
		那么乐队究竟有多少人？(求出最小数)
		通过程序编程算出。(需要有循环结构)
		将结果输出到out.txt文件中。
		注意：请勿删除注释语句。 
		---------------------------------------------------------------------------------------------------*/

			/**********  Begin  **********/
		#include <bits/stdc++.h>
		using namespace std;
		int main()
		{
			ofstream out;
			out.open("out.txt");
			int n=1;
			for (int i=1;;i++)
			{
				if((i%10==9)&&(i%9==8)&&(i%8==7)&&(i%7==6)&&(i%6==5)&&(i%5==4)&&(i%4==3)&&(i%3==2)&&(i%2==1))
				{
					out<<n;
					break;
				}
				n++;
			}
			out.close();
			return 0;
		}
			/**********   End  ***********/



44.              /* 从in.txt顺序读取所有的字符。把读取的顺序数字字符组成整数，输出到out.txt中。
		每个数字占一行
		格式如下：
		如:in.txt
		)yR[6.[L`56*LVRA<%S<xu>267eT]r>Y~S523]/H80\X"E12D1\)
		则out.txt
		6 
		56 
		267 
		523 
		80
		12 
		1
		注意：请勿删除注释语句。 
		---------------------------------------------------------------------------------------------------*/

			/**********  Begin  **********/
		#include <bits/stdc++.h>
		using namespace std;
		int main()
		{
			ifstream in("in.txt");
			ofstream out;
			out.open("out.txt");
			string a;
			in>>a;
			for (int i=0;;i++)
			{
				if(a[i]>='0'&&a[i]<='9')
				{
					out<<a[i];
					if(a[i+1]!='0'&&a[i+1]!='1'&&a[i+1]!='2'&&a[i+1]!='3'&&a[i+1]!='4'&&a[i+1]!='5'&&a[i+1]!='6'&&a[i+1]!='7'&&a[i+1]!='8'&&a[i+1]!='9')
					out<<'\n';
				}
				if(a[i]=='\0')
				break;
			}
			in.close();
			out.close();
			return 0;
		}

			/**********   End  ***********/




45.              /* 
		从输入文件in.txt中读取所有的整数(整数个数大于2)，
		输出这些整数的平均值 .
		如:in.txt
		34 5 78 9 2 89 -8 -1903 3234 
		则:out.txt
		171.111
		注意：请勿删除注释语句。 
		---------------------------------------------------------------------------------------------------*/

			/**********  Begin  **********/
		#include <bits/stdc++.h>
		using namespace std;
		int main()
		{
			int a[1000],s=0,n=0;
			double m;
			ifstream in("in.txt");
			ofstream out;
			out.open("out.txt");
			for (int i=0;;i++)
			{
				in>>a[i];
				s+=a[i];
				n++;
				if(a[i]=='\0')
				break;
			}
			m=(double)s/n;
			out<<m;
			in.close();
			out.close();
			return 0;
		 } 
			/**********   End  ***********/




46.              /* 某女士手里拎了一篮鸡蛋，从她身边奔跑而过一匹惊马，
		吓了她一跳，结果把篮里的鸡蛋打翻了，
		她说两个一数，三个一数，四个一数，五个一数时，
		余数分别为1，2，3和4。
		问篮里原有多少个鸡蛋？(求出最小数)
		通过程序编程算出。
		将结果输出到out.txt文件中。
		注意：请勿删除注释语句。 
		---------------------------------------------------------------------------------------------------*/


			/**********  Begin  **********/
		#include <bits/stdc++.h>
		using namespace std;
		int main()
		{
			ofstream out;
			out.open("out.txt");
			int k=0;
			for(int i=1;;i++)
			{
				k++;
				if((i%2==1)&&(i%3==2)&&(i%4==3)&&(i%5==4))
				{
					out<<k;
					break;
				}
			}
			out.close();
			return 0;
		 } 
			/**********   End  ***********/



47.               /* 求两个正整数m,n的最大公约数。
		两个正整数m,n从in.txt循环读入,直到全部读完， 
		并将结果输出到out.txt文件中。
		如:in.txt
		24 12
		34 67
		8 6
		5 89
		23 46
		则:out.txt
		12
		1
		2
		1
		23
		注意：请勿删除注释语句。 
		---------------------------------------------------------------------------------------------------*/

			/**********  Begin  **********/
		#include <bits/stdc++.h>
		using namespace std;
		int main()
		{
			ifstream in("in.txt");
			ofstream out;
			out.open("out.txt");
			int a[100],b[100],t;
			for (int i=0;;i++)
			{
				in>>a[i]>>b[i];
				if(a[i]>b[i])
				{
					t=a[i];
					a[i]=b[i];
					b[i]=t;
				}
				t=a[i];
				for (int k=a[i];k>=1;k--)
				{
					if((a[i]%k==0)&&(b[i]%k==0))
					{
						out<<t<<endl;
						break;
					}
					t--;
				}
				if(a[i]=='\0')
				break;
			}
			in.close();
			out.close();
			return 0;
		 } 

			/**********   End  ***********/




48.              /*
		编写函数fun实现矩阵（3行3列）的转置（即行列互换）   
		例如：输入下面的矩阵： 
		       100 200 300     
		       400 500 600     
		       700 800 900 
		转置结果：   
		      100 400 700     
		      200 500 800
		      300 600 900     
		注意：请勿改动主函数main和其它函数中的任何内容，仅在函数fun的花括号中填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <iostream>
		#include <fstream>
		using namespace std;          
		void  fun(int array[3][3])    
		{
		  /**********Begin**********/   
		  for (int i=2;i>=0;i--)     
		  {
		    for (int j=2;j>=0;j--)     
		    {
			array[i][j]=array[j][i];
			 } 
		  }     
		  /**********  End  **********/
		}     
		int main()     
		{   
		  void  xxx();   
		  int i,j;     
		  int array[3][3]={{100,200,300},{400,500,600},{700,800,900}};     
		  for (i=0; i < 3; i++)     
		  {
		    for (j=0; j < 3; j++)     
		      cout<<array[i][j]<<' ';     
		    cout<<'\n';     
		  }     
		  fun(array);     
		  cout<<"Converted array:"<<endl;     
		  for(i=0;i<3;i++)     
		  { 
		    for(j=0;j<3;j++)     
		      cout<<array[i][j]<<' ';     
		    cout<<'\n';
		  }
		  xxx();
		  return 0;     
		} 

		void xxx()     
		{       
		  ifstream IN("in.txt",ios::in);
		  ofstream OUT;
		  OUT.open("out.txt",ios::out);
		  int i,j, array[3][3]; 
		  for (i=0; i < 3; i++)     
		    for (j=0; j < 3; j++)     
		      IN>>array[i][j];     
		    fun(array);     
		    for (i=0; i < 3; i++)     
		    { 
		      for (j=0; j < 3; j++)     
			OUT<<array[i][j]<<' ';     
		      OUT<<'\n';     
		    }     
		  IN.close();
		  OUT.close();    
		}



49.             /*
		编写函数fun:实现字符串的复制，即将str1中的字符串复制到str2中。（不允许用字符串库函数strcpy）。
		注意：请勿改动主函数main和其它函数中的任何内容，仅在函数fun的花括号中填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include<iostream>
		#include<fstream>
		using namespace std;
		void fun(char str1[],char str2[])
		{
		  /**********Begin**********/
		  for(int i=0;i<40;i++)
		  {
			str2[i]=str1[i];
			if(str1[i]=='\0')
			break;
		  }
		  /**********  End  **********/
		}
		int main()
		{
		  void xxx();
		  char c1[40],c2[40];
		  cout<<"请输入要复制的字符串：\n";
		  cin.getline(c1,40);
		  fun(c1,c2);
		  cout<<"复制的结果："<<c2;
		  xxx();
		 return 0;
		}

		void xxx()
		{
		     ifstream inf;
		     ofstream outf;
		     inf.open("in.txt",ios::in);
		     outf.open("out.txt",ios::out);
		     int i;
		     char s1[40],s2[40];
		     while(!inf.eof())
		     {
			inf.getline(s1,40);
			    fun(s1,s2);
			outf<<s2;	
		     }    
		     inf.close();
		     outf.close();

		}



50.              /*
		编写函数fun：将字符串中的大写字母转换为对应的小写字母，其它字符不变。
		例如，输入：
		   HELLO world!
		结果：
		   hello world!
		注意：请勿改动主函数main和其它函数中的任何内容，仅在函数fun的花括号中填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <iostream>
		#include <fstream>
		using namespace std;
		void fun(char str[])
		{
		  /**********Begin**********/
		  for(int i=0;i<40;i++)
		  {
			if(str[i]>='A'&&str[i]<='Z')
			str[i]=str[i]+32;
			if(str[i]=='\0')
			break;
		  }
		  /**********  End  **********/
		}


		int main()
		{
		  void xxx();
		  char str[40];
		  cout<<"请输入字符串\n";
		  cin.getline(str,40);
		  fun(str);
		  cout<<"大写字母转换成小写字母的结果：\n"<<str;
		  xxx();
		  return 0;
		}

		void xxx()
		{
		  /* 本函数用于打开文件，输入测试数据，调用fun函数，输出数据，关闭文件。*/
		     ifstream inf;
		     ofstream outf;
		     inf.open("in.txt",ios::in);
		     outf.open("out.txt",ios::out);
		     char s1[40];
		     inf.getline(s1,40);
		     fun(s1);
		     outf<<s1;
		     inf.close();
		     outf.close();
		}




51.             #include <bits/stdc++.h>
		using namespace std;
		int main()
		{
			float s=0;
			struct student
			{
				char name[];
				int sorce[4];
				float aver;
			};
			student stu;
			cout<<"输入姓名：";
			cin>>stu.name;
			cout<<"各科分数:";
			for(int i=0;i<4;i++)
			{
				cin>>stu.sorce[i];
				s+=stu.sorce[i];
			}
			stu.aver=s/4;
			cout<<"平均分："<<stu.aver;
			return 0;
		 } 



52.                     #include <bits/stdc++.h>
			using namespace std;
			struct a
			{
				char name[20]; 
				int sorce;
				char sex;
			};
			a num[]={{"xiaohuang",110,'boy'},{"xiaoliu",120,'girl'},{"xiaowang",130,'girl'}};
			int main()
			{
				int n;
				a t;
				n=sizeof(num)/sizeof(num[0]);
				for (int i=0;i<n;i++)
				{
					if(num[i].name>num[i+1].name)
					{
						t=num[i];
						num[i]=num[i+1];
						num[i+1]=t;
					}
				}
				for(int i=0;i<n;i++)
				{
					cout<<"姓名：" <<num[i].name<<endl;
					cout<<"成绩：" <<num[i].sorce<<endl;
					cout<<"性别：" <<num[i].sex<<endl;
				}
				return 0;
			 } 




53.                     #include <bits/stdc++.h>
			using namespace std;
			struct student
			{
				char name[20];
				int id;
				float sorce[4];
			};
			int main()
			{
				float s=0,aver;
				student a,*p;
				p=&a;
				strcpy(a.name,"xiaozhang");
				a.id=2020211;
				cout<<"请输入四科成绩:";
				for (int i=0;i<4;i++)
				{
					cin>>p->sorce[i];
					s+=p->sorce[i];
				}
				cout<<"学生信息："<<endl;
				cout<<"姓名："<<p->name<<endl;
				cout<<"学号："<<p->id<<endl;
				cout<<"平均成绩："<<s/4;
				return 0;
			}





54.                     #include <iostream>
			using namespace std;
			struct code
			{
				int m;
				char n;
			};
			int main()
			{
				code a[]={{100,'A'},{200,'B'},{300,'C'}},*p;
				p=a;
				cout<<++p->m<<endl;                //100
				cout<<++(p++)->n<<endl;            //B
				cout<<++p->m<<endl;                //201
				cout<<(++p)->n++<<endl;            //C
				cout<<p->n<<endl;                  //D 
				cout<<p->m++;                      //300
				return 0;
			}




55.                     #include <bits/stdc++.h>
			using namespace std;
			class what
			{
				private:
					double a,b,c;
				public:
					void abc(double,double,double);
					double C(void);
					double S(void);
			};
			void what::abc(double x,double y,double z)
			{
				a=x;
				b=y;
				c=z;
			}
			double what::C(void)
			{
				return a+b+c;
			}
			double what::S(void)
			{
				double t=(a+b+c)/2;
				double s=sqrt(t*(t-a)*(t-b)*(t-c));
				return s;
			}
			int main()
			{
				what k,j;
				k.abc(3,4,5);
				j.abc(6,6,6);
				cout<<"周长1="<<k.C()<<'\t'<<"面积1="<<k.S()<<endl;
				cout<<"周长2="<<j.C()<<'\t'<<"面积2="<<j.S()<<endl;
				return 0;
			}




56。                     #include <bits/stdc++.h>
			using namespace std;
			class what
			{
				private:
					double a,b,c;
				public:
					void abc(double,double,double);
					double C(void);
					double S(void);
			};
			void what::abc(double x,double y,double z)
			{
				a=x;
				b=y;
				c=z;
			}
			double what::C(void)
			{
				return a+b+c;
			}
			double what::S(void)
			{
				double t=(a+b+c)/2;
				double s=sqrt(t*(t-a)*(t-b)*(t-c));
				return s;
			}
			int main()
			{
				what k,*p;
				p=&k;
				p->abc(6,6,6);
				cout<<p->C()<<'\t'<<p->S();
				return 0;
			}



57.		#include <bits/stdc++.h>
		using namespace std;
		class what
		{
			private:
				double a,b,c;
			public:
				void abc(double,double,double);
				double C(void);
				double S(void);
		};
		void what::abc(double x,double y,double z)
		{
			a=x;
			b=y;
			c=z;
		}
		double what::C(void)
		{
			return a+b+c;
		}
		double what::S(void)
		{
			double t=(a+b+c)/2;
			double s=sqrt(t*(t-a)*(t-b)*(t-c));
			return s;
		}
		int main()
		{
			what k;
			what &p=k;
			p.abc(6,6,6);
			cout<<p.C()<<'\t'<<p.S();
			return 0;
		}



58.		#include <bits/stdc++.h>
		using namespace std;
		class what
		{
			private:
				double a,b,c;
			public:
				void abc(double,double,double);
				void abc(double);
				double C(void);
				double S(void);
		 };
		void what::abc(double x,double y,double z)
		{
			a=x;
			b=y;
			c=z;
		}
		void what::abc(double x)
		{
			a=b=c=x;
		}
		double what::C(void)
		{
			return a+b+c;
		}
		double what::S(void)
		{
			double t=(a+b+c)/2;
			double s=sqrt(t*(t-a)*(t-b)*(t-c));
			return s;
		}
		int main()
		{
			what a,b;
			a.abc(3,4,5);
			b.abc(6);
			cout<<"周长1="<<a.C()<<'\t'<<"面积1="<<a.S()<<endl;
			cout<<"周长2="<<b.C()<<'\t'<<"面积2="<<b.S()<<endl;
			return 0;
		 } 



59.		#include <bits/stdc++.h>
		using namespace std;
		class what
		{
			private:
				double a,b,c;
			public:
				void abc(double x=5);
				double C(void);
				double S(void);
		};
		void what::abc(double x)
		{
			a=b=c=x;
		}
		double what::C(void)
		{
			return a+b+c;
		}
		double what::S(void)
		{
			double t=(a+b+c)/2;
			double s=sqrt(t*(t-a)*(t-b)*(t-c));
			return s;
		 } 
		int main()
		{
			what a,b;
			a.abc();
			b.abc(6);
			cout<<"周长1="<<a.C()<<'\t'<<"面积1="<<a.S()<<endl;
			cout<<"周长2="<<b.C()<<'\t'<<"面积2="<<b.S()<<endl;
			return 0;
		}



60.             #include <bits/stdc++.h>
		using namespace std;
		class num
		{
			private:
				int a,b;
			public:
				void xy(int x,int y);
				int A();                 //最大公约数 
				int B();                 //最小公倍数 
		};
		void num::xy(int x,int y)
		{
			a=x;
			b=y;
		}
		int num::A()
		{
			int m,n,t;
			m=a;
			n=b;
			if(m>n)
			{
				t=m;m=n;n=t;
			}
			while(t=n%m)
			{
				n=m;m=t;                  //欧几里得算法 
			}
			return m; 
		}
		int num::B()
		{
			int m=A();
			return a*b/m;                 //最小公倍数=两数相乘/最大公约数 
		}
		int main()
		{
			num N;
			int a,b;
			cout<<"请输入两个整数：";
			cin>>a>>b;
			N.xy(a,b);
			cout<<"最大公约数："<<N.A()<<endl;
			cout<<"最小公倍数："<<N.B();
			return 0; 
		}



61.            #include <bits/stdc++.h>
		using namespace std;
		class N
		{
			private:
			double a,b,c;
			public:
			void abc(double x,double y,double z);
			void fun();                        //使用fun函数直接输出结果 
		};
		void N::abc(double x,double y,double z)
		{
			a=x;b=y;c=z;
		}
		void N::fun()
		{
			double delta;
			delta=b*b-4*a*c;
			if(delta<0)
			cout<<"方程无实根！";
			else
			{
				delta=sqrt(delta);                             //delta开方 
				if(delta)                                     //delta不为0时，方程有不同实根
				{
					cout<<"方程有不同实根："<<(-b+delta)/2/a<<'\t'<<(-b-delta)/2/a;
				 }
				else
				{
					cout<<"方程有相同实根："<<-b/2/a;
				}
			}
		}
		int main()
		{
			N num;
			double a,b,c;
			cout<<"请输入三个系数：";
			cin>>a>>b>>c;
			num.abc(a,b,c);
			num.fun();
			return 0;
		}




62.             #include <bits/stdc++.h>
		using namespace std;
		class N
		{
			private:
				int n;
			public:
				void nn(int m);
				int NN(int x);
				int sum();
		};
		void N::nn(int m)
		{
			n=m;
		}
		int N::NN(int x)             //设置一个求阶乘的函数，其中X由sum函数输入 
		{
			int t=1;
			for(int i=1;i<=x;i++)
			t*=i;
			return t;
		}
		int N::sum()
		{
			int s=0;
			for(int i=1;i<=n;i++)
			s+=NN(i);
			return s;
		}
		int main()
		{
			N num;
			int n;
			cout<<"输入：";
			cin>>n;
			num.nn(n);
			cout<<"s="<<num.sum();
			return 0;
		}



63.             #include <bits/stdc++.h>
		using namespace std;
		class myclass
		{
			public:
				int num;
				void set(int i);
		};
		int num=3;
		void myclass::set(int i)
		{
			num=i;
		}
		int main()
		{
			myclass my1;
			int num=10;
			my1.set(5);
			cout<<my1.num<<endl;
			my1.set(num);
			cout<<my1.num<<endl;
			my1.set(::num);
			cout<<my1.num;
			return 0;
		}







64.              #include <bits/stdc++.h>
		using namespace std;
		class arr
		{
			int a[10],len;
			public:
				void setarr(int *p,int n=10)
				{
					len=n;
					for (int i=0;i<len;i++)
					a[i]=p[i];
				}
				int maxarr()
				{
					int max=a[0];
					for (int i=0;i<len;i++)
					if(max<a[i])
					max=a[i];
					return max;
				}
				int maxarr(int n)
				{
					int max=a[0];
					for (int i=0;i<n;i++)
					if(max<a[i])
					max=a[i];
					return max;
				}
				int maxarr(unsigned n)
				{
					return a[n];
				}
		};
		int main()
		{
			int a1[10]={1,2,3,4,5,6,7,8,9,10};
			int a2[5]={1,2,3,4,5};
			arr arr1,arr2;
			arr1.setarr(a1);
			arr2.setarr(a2,sizeof(a2)/sizeof(int));
			cout<<arr1.maxarr()<<endl;
			cout<<arr2.maxarr(3)<<endl;
			cout<<arr2.maxarr(3u)<<endl;
			return 0;
		}




65.              #include <bits/stdc++.h>
		using namespace std;
		class N
		{
			private:
				double a,b,c;
			public:
				N(double x,double y,double z)
				{
					a=x;b=y;c=z;
				}
				double C(void)
				{
					return a+b+c;
				}
				double S(void)
				{
					double t=(a+b+c)/2;
					double s=sqrt(t*(t-a)*(t-b)*(t-c));
					return s;
				}
		};
		int main()
		{
			N n(3,4,5);
			N m(6,6,6);
			return 0;
		}




66.            #include <bits/stdc++.h>
		using namespace std;
		class N
		{
			private:
				double a,b,c;
			public:
				N(double x,double y,double z)
				{
					a=x;b=y;c=z;
				}
				N(double x)
				{
					a=b=c=x;
				}
				double C(void)
				{
					return a+b+c;
				}
				double S(void)
				{
					double t=(a+b+c)/2;
					double s=sqrt(t*(t-a)*(t-b)*(t-c));
					return s;
				}
		};
		int main()
		{
			N n(3,4,5);
			N m(6);                                    //使用构造函数可以让创建对象时不用函数名，更加简便 
			return 0;
		}



67.            #include <bits/stdc++.h>
		using namespace std;
		class N
		{
			private:
				double a,b,c;
			public:
				N(double x,double y,double z)
				{
					a=x;b=y;c=z;
				}
				double C(void)
				{
					return a+b+c;
				}
				double S(void)
				{
					double t=(a+b+c)/2;
					double s=sqrt(t*(t-a)*(t-b)*(t-c));
					return s;
				}
				~N()
				{
					cout<<"析构函数";
				 } 
		};
		int main()
		{
			N n(3,4,5);
			N m(6,6,6);
			return 0;
		}





68.             /*编写函数fun实现将字符串按字符降序排列。
		如：in.txt
		CEAedcab
		则:out.txt
		edcbaECA
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句 
		---------------------------------------------------------------------------------------------------*/
		#include<fstream>
		#include<string.h>
		using namespace std;

		/**********Begin**********/
		void fun(char *s)
		{
			char *p=s,t;
			int n=strlen(s);
			for(int i=0;i<n-1;i++)
			{
				for(int j=0;j<n-i-1;j++)
				{
					if(p[j]<p[j+1])
					{
						t=p[j];
						p[j]=p[j+1];
						p[j+1]=t;
					}
				}
			}
		 } 
		/**********  End  **********/

		int main()
		{
			ifstream infile("in.txt",ios::in); //定义输入文件流类对象infile 
			ofstream outfile("out.txt",ios::out);//定义输出文件流类对象outfile
			//infile、outfile与cin、cout用法类似 

			char s[100];
			while(infile>>s)
			{
				fun(s);
				outfile<<s<<endl;
			}

			infile.close();
			outfile.close();
			return 0;
		}



69.             /*
		定义函数fun：根据p指针，计算该学生的4门课的平均分。
		学生记录由学号，姓名，四门课成绩，平均分组成。
		注意：请勿改动主函数main和其它函数中的任何内容，仅在函数fun的花括号中填入你编写的若干语句。
		----------------------------------------------------------------------------------------*/
		#include<iostream> 
		#include<fstream> 
		using namespace std;
		struct student
		{
			int id;
			char name[20];
			int score[4];
			int avg;
		};
		void fun(student* p)
		{
			/*************begin **************/
			int s=0;
			for(int i=0;i<4;i++)
			{
				s+=p->score[i];
			  }
			  p->avg=s/4;
			/****************end****************/

		}

		int main()
		{
			student stu;
			int i;
			ifstream ifile("in.txt");
			ofstream ofile("out.txt"); 
			while(!ifile.eof())
			{
			ifile>>stu.id;     //从文件读入学号
			ifile>>stu.name;   //从文件读入姓名
			for(i=0;i<4;i++) 
				ifile>>stu.score[i];   //从文件读入四门课的成绩
			fun(&stu); 
			cout<<stu.id<<" "<<stu.name<<" ";
			for(i=0;i<4;i++)
				cout<<stu.score[i]<<" ";
			cout<<"平均成绩:"<<stu.avg<<endl;
			    //输出到out.txt文件 
			ofile<<stu.id<<" "<<stu.name<<" ";
			for(i=0;i<4;i++)
				ofile<<stu.score[i]<<" ";
			ofile<<"平均成绩:"<<stu.avg<<endl;
			} 
			ifile.close();   //关闭输入文件in.txt
			ofile.close();   //关闭输出文件out.txt
			return 0;
		}



70.              /*
		定义函数fun：根据p指针，计算该学生的4门课的平均分。
		学生记录由学号，姓名，四门课成绩，平均分组成。
		注意：请勿改动主函数main和其它函数中的任何内容，仅在函数fun的花括号中填入你编写的若干语句。
		----------------------------------------------------------------------------------------*/
		#include<iostream> 
		#include<fstream> 
		using namespace std;
		struct student
		{
			int id;
			char name[20];
			int score[4];
			int avg;
		};
		void fun(student* p)
		{
			/*************begin **************/
			int s=0;
			for(int i=0;i<4;i++)
			{
				s+=p->score[i];
			  }
			  p->avg=s/4;
			/****************end****************/

		}

		int main()
		{
			student stu;
			int i;
			ifstream ifile("in.txt");
			ofstream ofile("out.txt"); 
			while(!ifile.eof())
			{
			ifile>>stu.id;     //从文件读入学号
			ifile>>stu.name;   //从文件读入姓名
			for(i=0;i<4;i++) 
				ifile>>stu.score[i];   //从文件读入四门课的成绩
			fun(&stu); 
			cout<<stu.id<<" "<<stu.name<<" ";
			for(i=0;i<4;i++)
				cout<<stu.score[i]<<" ";
			cout<<"平均成绩:"<<stu.avg<<endl;
			    //输出到out.txt文件 
			ofile<<stu.id<<" "<<stu.name<<" ";
			for(i=0;i<4;i++)
				ofile<<stu.score[i]<<" ";
			ofile<<"平均成绩:"<<stu.avg<<endl;
			} 
			ifile.close();   //关闭输入文件in.txt
			ofile.close();   //关闭输出文件out.txt
			return 0;
		}





71.             /*字符串的截取:编写一个函数char * substr(char *s, int begin, int end，char *s1)，
		用于取得字符串s中从begin位置开始至end位置结束（包括begin和end位置上的字符，位置从0开始计算）的子字符串，将该子字符串存放在s1中。
		如：in.txt
		This is a wonderful world!
		10 18
		则:out.txt
		wonderful
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		#include <iostream>
		#include <string.h>
		using namespace std;
		void substr(char *s, int begin, int end,char *s1)
		{
		/********************************* Begin ****************************/
		 int t=0;
		 for(int i=begin;i<=end;i++)
		 {
			s1[t]=s[i];
			t++;
		  } 
		  s1[t]='\0';
		/********************************* End ******************************/
		}
		int main()
		{
			ifstream file_in("in.txt");
			ofstream file_out("out.txt"); 
			if(!file_in||!file_out) return -1;
			streambuf *std_in;  
			streambuf *std_out;
			std_in= cin.rdbuf(file_in.rdbuf());  
			std_out= cout.rdbuf(file_out.rdbuf());  

			char s[100];
		       char s1[100];
			int m,n;
			cin.getline(s,100);
			cin>>m>>n;
			substr(s, m, n,s1);
			cout<<s1<<endl;

			file_in.close();
			file_out.close();
			cin.rdbuf(std_in); 
			cout.rdbuf(std_out);	
			return 0;
		}



72.              /*编写函数fun找出一维整型数组元素中最大的值和它所在的下标，最大的值和它所在的下标通过形参传回。
		如：in.txt
		1 2 13 14 23 15 21 60 35 23
		则:out.txt
		max=60，index=7
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		using namespace std; 
		void fun(int a[], int n , int  *max, int  *d )//n为数组a存放的数组个数 
		{
		    /**********  Begin  **********/
			for(int i=0;i<n;i++)
			{
				if(a[i]>*max)
				{
					*max=a[i];
					*d=i;
				}
			 } 
		    /**********   End  ***********/
		}
		int main()
		{ 
			ifstream infile("in.txt",ios::in);//定义输入文件流类对象infile 
			ofstream outfile("out.txt",ios::out);//定义输出文件流类对象outfile
			//infile与cin用法相同，outfile与cout用法相同。 

			int a[20],max,index,n=0;
			while(infile>>a[n])
				n++;

			fun(a,n,&max,&index);

			outfile<<"Max="<<max<<",Index="<<index<<'\n';

			infile.close();
			outfile.close(); 
			return 0;
		}




73.             /*
		设计函数fun:从保存n个学生记录的stu1数组中，找出低于平均分的学生数据，并保存在sut2数组中，函数返回值表示找到的学生人数。
		学生的记录由学号和成绩组成，N名学生的数据已在主函数中放入结构体数组中。
		请勿改动主函数main和其他函数中的任何内容，仅在函数fun的花括号中填入你编写的若干语句。
		-------------------------------------------------------------------------------------------------------------------------*/
		#include <iostream>
		using namespace std;
		#include<fstream>
		#include<iomanip>
		#define N 8 
		struct student
		{   
		   char num[10];
		    int score;
		};
		int fun(student stu1[],int n,student stu2[])
		{

		    /**********  Begin  **********/
		float s=0,aver;
		for(int i=0;i<n;i++)                  //求平均分
		{
			s+=stu1[i].score;
		 }
		aver=s/n;
		int t=0;
		for(int i=0;i<n;i++)
		{
			if(stu1[i].score<aver)
			{
				stu2[t]=stu1[i];
				t++;
			}
		}
		return t;
		    /**********   End  ***********/
		}

		int main()
		{  
			student stu1[N]={{"GA05",85},{"GA03",76},{"GA02",69},{"GA04",85},{"GA01",91},{"GA07",72},{"GA08",64},{"GA06",87}};
			student stu2[N];
			int i,n;
			n=fun(stu1,N,stu2);
			cout<<"所有学生数据："<<endl;
			for(i=0;i<N;i++)
			cout<<stu1[i].num<<setw(4)<<stu1[i].score<<endl;
		      cout<<n<<endl;	
			cout<<"低于平均分学生数据："<<endl;
			for(i=0;i<n;i++)
			cout<<stu2[i].num<<setw(4)<<stu2[i].score<<endl;

			//结果写入out.txt 
			ofstream ofile; 
			ofile.open("out.txt");
			ofile<<n<<endl;
			for(i=0;i<n;i++)
			ofile<<stu2[i].num<<setw(4)<<stu2[i].score<<endl;
			ofile.close();
		}



74.               /*
		基于下面的main()函数，写出完整的程序，能够编译和运行；
		程序中的输入文件in.txt包含以下数据：
		1001
		1002
		1003
		定义类Student，包括私有成员变量学号(int)，包括构造函数和析构函数,使得输出文件out.txt包含以下数据： 
		Constructor1001
		Constructor1002
		Constructor1003
		Destructor1003
		Destructor1002
		Destructor1001
		提示：程序使用文件实现输入和输出，不可以用 cin 和 cout ； 
		只能在Begin和End之间输入代码，不能改动程序的任何其余部分。 
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		using namespace std;
		ifstream infile("in.txt");
		ofstream outfile("out.txt");
		/********************** Begin *******************/
		class Student 
		{
			private:
				int name;
			public:
				Student(int N)
				{
					name=N;
					outfile<<"Constructor"<<name<<endl;
				}
				~Student()
				{
					outfile<<"Destructor"<<name<<endl;
				}
		};
		/********************** End *********************/

		void  CreateObjects()
		{
		       int n[3];
			infile>>n[0]>>n[1]>>n[2];
			Student s1[3]={n[0],n[1],n[2]};
		}
		int main()
		{

		  if(!infile) return -1;
		  if(!outfile) return -1;

		  CreateObjects();
		  infile.close();
		  outfile.close();
		  return 0;
		}



75.             /*
		定义学生类Student，包括私有成员变量学号(int)、性别(char)、年龄(int)，包括构造函数，用于对私有成员初始化； 
		成员函数Display(ostream &output)用于输出：学号(int)、性别(char)、年龄(int)，将这些数据输出到输出流；
		程序中的输入文件in.txt包含以下数据（3列数据分别表示学号、性别、年龄） ：
		1001 f 18
		1002 m 19
		1003 m 17
		1004 f 18
		1005 f 19
		输出文件out.txt包含以下数据(数据之间用一个空格隔开）：
		1001	f	18
		1002	m	19
		1003	m	17
		1004	f	18
		1005	f	19
		程序从文件in.txt中读取数据，输出到文件out.txt中，不可以用 cin 和 cout ； 
		只能在Begin和End之间输入代码，不能改动程序的任何其余部分。  
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		using namespace std;
		ifstream infile("in.txt");
		ofstream outfile("out.txt");
		/*************************** Begin ************************/
		class Student
		{
			private:
				int a;char b;int c;
			public:
				Student(int x,char y,int z)
				{
					a=x;b=y;c=z;
				}
				Display(ostream&output)
				{
					outfile<<a<<" "<<b<<" "<<c<<endl;
				}
		 } ;
		/*************************** End **************************/

		int main()
		{
			if(!infile) return -1;
			if(!outfile) return -1;
			int n;char s;int a;
			while(!infile.eof())
			{
				infile>>n>>s>>a;
				Student s1(n,s,a);
				s1.Display(outfile);
			}
			infile.close();
			outfile.close();
			return 0;
		}



76.             /*编写函数fun实现将字符串按字符降序排列。
		如：in.txt
		CEAedcab
		则:out.txt
		edcbaECA
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句 
		---------------------------------------------------------------------------------------------------*/
		#include<fstream>
		#include<string.h>
		using namespace std;

		/**********Begin**********/
		void fun(char s[])
		{
			char k;
			int n=sizeof(s);
			for(int i=0;i<n-1;i++)
			{
				for(int t=0;t<n-i-1;t++)
				{
					if(s[t]<s[t+1])
					{
						k=s[t];s[t]=s[t+1];s[t+1]=k;
					}
				}
			}
		 } 
		/**********  End  **********/

		int main()
		{
			ifstream infile("in.txt",ios::in); //定义输入文件流类对象infile 
			ofstream outfile("out.txt",ios::out);//定义输出文件流类对象outfile
			//infile、outfile与cin、cout用法类似 

			char s[100];
			while(infile>>s)
			{
				fun(s);
				outfile<<s<<endl;
			}

			infile.close();
			outfile.close();
			return 0;
		}



77.             /*编写函数fun：将一个字符串中的大写字母转换成小写，小写转换成大写，其它字符保持不变。 
		如:in.txt
		HappyNew2019Year
		则:out.txt
		hAPPYnEW2019yEAR
		请在Begin和End之间完善程序。注意：不要删掉注释语句。 
		---------------------------------------------------------------------------------------------------*/
		#include <fstream> 
		using namespace std;
		#include <string.h> 
		/***********Begin**********/
		void fun(char str[])
		 {
			int n=sizeof(str);
			for(int i=0;i<n;i++)
			{
				if(str[i]>='a'&&str[i]<='z')
				str[i]-=32;
				else if(str[i]>='A'&&str[i]<='Z')
				str[i]+=32;
			 }
		 }
		/***********End***********/

		int main()
		{
			ifstream infile("in.txt",ios::in);//定义输入流文件对象infile 
			ofstream outfile("out.txt",ios::out);//定义输出流文件对象outfile 
			//infile、outfile的用法同cin、cout
			char str[100];
		      while(!infile.eof())
		     {
		       infile.getline(str,100);//从文件in.txt中读入字符串到数组str中 
			fun(str);
			outfile<<str<<endl; //输出字符串到文件out.txt中 
		     }
			infile.close();
			outfile.close();
			return 0;
		}




78.             /*
		定义函数fun：在n个学生记录中，根据学生的学号，查找该学生对应的成绩，若没有该学号，则返回-1。
		学生的记录由学号和成绩组成，N名学生的数据已在主函数中放入结构体数组s中，要查找的学生学号从文件读入，依次将学生的学号和查找结果存放在输出文件中。
		（用于字符串比较的函数是strcmp）。
		例如in.txt中显示：
		GA09
		GA010
		GA011
		则out.txt中输出：
		GA09 -1
		GA010 -1
		GA011 91
		注意：请勿改动主函数main和其它函数中的任何内容，只能在begin与end之间写代码。
		------------------------------------------------------------------------------------------*/
		#include<iostream>
		#include<cstring>
		#include<fstream>
		using namespace std;
		#define N 16
		struct student
		{   char num[10];
		    int score;
		} ;
		int fun (student stu[],int n, char num[])
		{
		 /**********  Begin  **********/
		 int t=0;
		  for (int i=0;i<n;i++)
		  {
			if(strcmp(stu[i].num,num)==0)
			{
			  t=1;
			  return stu[i].score;
			  break;
			}
		   } 
		   if(t==0)
		   return -1;
		 /**********   End  ***********/

		}

		int main()
		{ ifstream infile("in.txt",ios::in); 
		  ofstream outfile("out.txt",ios::out);
		  student s[N]={{"GA05",85},{"GA03",76},{"GA02",69},{"GA04",85},{"GA01",91},{"GA07",72},{"GA08",64},{"GA06",87},{"GA015",85},{"GA013",91},{"GA012",64},{"GA014",91},{"GA011",91},{"GA017",64},{"GA018",64},{"GA016",72}};
		  int score;
		  char num[10];//保存要查找学号  
		  while(infile>>num)
		  { 
			score=fun(s,N,num);
			outfile<<num<<" "<<score<<endl; 
		  }
		  infile.close();
		  outfile.close();
		  return 0;
		}




79.              /*
		定义箱子类Box，包括私有成员变量高度height(int)、宽度width(int)、长度length(int)，
		包括构造函数和成员函数volume()； 
		构造函数要能够实现main()函数中对象box1,box2,box3,box4的正确构造；
		成员函数volume(),求箱子的体积:height*width*length
		程序中的输入文件in.txt包含以下数据:
		(共2组数据，第1组中第1个箱子的height*width*length为5*3*2，第3个箱子的height*width为2*3)
		5 3 2
		2 3
		6 3 5
		5 3
		输出文件out.txt包含以下数据:
		30
		30
		60
		60
		90
		90
		150
		150
		程序从文件in.txt中读取数据，输出到文件out.txt中，不可以用 cin 和 cout ； 
		只能在Begin和End之间输入代码，不能改动程序的任何其余部分。 
		--------------------------------------------------------------------------------------------------*/
		#include <fstream>
		using namespace std;
		ifstream infile("in.txt");
		ofstream outfile("out.txt");
		/*************************** Begin ***********************/
		class Box
		{
			private:
				int t;int w;int l;
			public:
				Box(int a=10,int b=10,int c=10)
				{
					t=a;w=b;l=c;
				}
				int volume(void)
				{
					return t*w*l;
				}
		 } ;
		/*************************** End *************************/

		int main( )
		{
		 if(!infile) return -1;
		 if(!outfile) return -1;
		  int n1,n2,n3;
		  while(!infile.eof())
		  {
			infile>>n1>>n2>>n3;
			Box box1(n1,n2,n3),box2;
			box2=box1;
			infile>>n1>>n2;
			Box box3(n1,n2);
			Box box4(box3);
			outfile<<box1.volume()<<'\n'<<box2.volume()<<'\n'
			<<box3.volume()<<'\n'<<box4.volume()<<endl; 
		  }
		  infile.close();
		  outfile.close();
		  return 0;
		}




80.              /*
		基于下面的main()函数，写出完整的程序，能够编译和运行；
		程序中的输入文件in.txt包含以下数据
		6S
		6Plus
		7S
		7Plus 
		定义类Apple，包括私有成员变量name(string)，包括构造函数和析构函数,使得输出文件out.txt包含以下数据 
		Apple6S
		~Apple6S
		Apple6Plus
		~Apple6Plus
		Apple7S
		~Apple7S
		Apple7Plus
		~Apple7Plus
		提示：程序使用文件实现输入和输出，不可以用 cin 和 cout ； 
		只能在Begin和End之间输入代码，不能改动程序的任何其余部分。 
		---------------------------------------------------------------------------------------------------*/
		#include<string>
		#include<fstream>
		using namespace std;
		ifstream infile("in.txt");
		ofstream outfile("out.txt");
		/******************** Begin ****************/
		class Apple
		{
			private:
				string name;
			public:
				Apple(string N)
				{
					name=N;
					outfile<<"Apple"<<name<<endl;
				}
				~Apple()
				{
					outfile<<"~Apple"<<name<<endl;
				}
		 } ;
		/******************** End ******************/

		int main()
		{
		    if(!infile) return -1;
		    if(!outfile) return -1;

		    string name;
		    while(infile>>name)
		    {
			Apple *pA = new Apple(name);
		       delete pA;
		    }	

		    infile.close();
		    outfile.close();
		    return 0;
		}




81.              /*查找字符串
		编写一个函数实现：在一个字符串中查找另一个给定的字符串首次出现的位置。
		int find(char * strSrc, char * strFind)
		该函数在字符串strSrc中查找字符串srcFind首次出现的位置，并返回一个整数表示该位置，返回-1表示查找失败或未找到。
		如：in.txt
		Welcome to the C++ world!
		C++
		WelcomeC++ to the C++ world!
		C++
		C++Welcome to the world!
		C++
		Welcome to the worldC++
		C++
		Welcome to the worldC+
		C++        
		则:out.txt
		16
		8
		1
		21
		-1
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		#include<iostream>
		#include <string.h>
		using namespace std;
		int find(char * strSrc, char * strFind)
		{
		/***************************** Begin ******************************/
		int n1=strlen(strSrc),n2=strlen(strFind);                 //表示没有字符
		int i,j;
		if(n1<n2)
		return -1;
		for(i=0;i<n1-n2;i++)
		{
			for(j=0;j<n2;j++)
			{
				if(strSrc[i+j]!=strFind[j])
				break;
			}
			if(j==n2)
			return i+1;	
		}
		return -1;
		/***************************** End ********************************/
		}

		int main()
		{
			ifstream file_in("in.txt");
			ofstream file_out("out.txt"); 
			if(!file_in||!file_out) return -1;
			streambuf *std_in;  
			streambuf *std_out;
			std_in= cin.rdbuf(file_in.rdbuf());  
			std_out= cout.rdbuf(file_out.rdbuf());  

			char strSrc[100],strFind[100];
			while(cin.getline(strSrc,100)&&cin.getline(strFind,100))
				cout<<find(strSrc,strFind)<<"\n";

			file_in.close();
			file_out.close();
			cin.rdbuf(std_in); 
			cout.rdbuf(std_out);	
			return 0;
		}




82.             /*字符串的截取:编写一个函数char * substr(char *s, int begin, int end，char *s1)，
		用于取得字符串s中从begin位置开始至end位置结束（包括begin和end位置上的字符，位置从0开始计算）的子字符串，将该子字符串存放在s1中。
		如：in.txt
		This is a wonderful world!
		10 18
		则:out.txt
		wonderful
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		#include <iostream>
		#include <string.h>
		using namespace std;
		void substr(char *s, int begin, int end,char *s1)
		{
		/********************************* Begin ****************************/
		int n=strlen(s),t=0;
		for(int i=begin;i<=end;i++)
		{
			s1[t]=s[i];
			t++;
		 } 
		 s1[t]='\0';
		/********************************* End ******************************/
		}
		int main()
		{
			ifstream file_in("in.txt");
			ofstream file_out("out.txt"); 
			if(!file_in||!file_out) return -1;
			streambuf *std_in;  
			streambuf *std_out;
			std_in= cin.rdbuf(file_in.rdbuf());  
			std_out= cout.rdbuf(file_out.rdbuf());  

			char s[100];
		       char s1[100];
			int m,n;
			cin.getline(s,100);
			cin>>m>>n;
			substr(s, m, n,s1);
			cout<<s1<<endl;

			file_in.close();
			file_out.close();
			cin.rdbuf(std_in); 
			cout.rdbuf(std_out);	
			return 0;
		}




83.              /*编写函数fun找出一维整型数组元素中最大的值和它所在的下标，最大的值和它所在的下标通过形参传回。
		如：in.txt
		1 2 13 14 23 15 21 60 35 23
		则:out.txt
		max=60，index=7
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		using namespace std; 
		void fun(int a[], int n , int  *max, int  *d )//n为数组a存放的数组个数 
		{
		    /**********  Begin  **********/
			for(int i=0;i<n;i++)
			{
				if(a[i]>*max)
				{
					*max=a[i];
					*d=i;
				}
			 } 
		    /**********   End  ***********/
		}
		int main()
		{ 
			ifstream infile("in.txt",ios::in);//定义输入文件流类对象infile 
			ofstream outfile("out.txt",ios::out);//定义输出文件流类对象outfile
			//infile与cin用法相同，outfile与cout用法相同。 

			int a[20],max,index,n=0;
			while(infile>>a[n])
				n++;

			fun(a,n,&max,&index);

			outfile<<"Max="<<max<<",Index="<<index<<'\n';

			infile.close();
			outfile.close(); 
			return 0;
		}




84.              /*
		设计函数fun:从保存n个学生记录的stu1数组中，找出低于平均分的学生数据，并保存在sut2数组中，函数返回值表示找到的学生人数。
		学生的记录由学号和成绩组成，N名学生的数据已在主函数中放入结构体数组中。
		请勿改动主函数main和其他函数中的任何内容，仅在函数fun的花括号中填入你编写的若干语句。
		-------------------------------------------------------------------------------------------------------------------------*/
		#include <iostream>
		using namespace std;
		#include<fstream>
		#include<iomanip>
		#define N 8 
		struct student
		{   
		   char num[10];
		    int score;
		};
		int fun(student stu1[],int n,student stu2[])
		{

		    /**********  Begin  **********/
		float s=0,aver;
		int t=0;
		for(int i=0;i<n;i++)
		s+=stu1[i].score;
		aver=s/n; 
		for(int i=0;i<n;i++)
		{
			if(stu1[i].score<aver)
			{
				stu2[t]=stu1[i];
				t++;
			}
		}
		return t;
		    /**********   End  ***********/
		}

		int main()
		{  
			student stu1[N]={{"GA05",85},{"GA03",76},{"GA02",69},{"GA04",85},{"GA01",91},{"GA07",72},{"GA08",64},{"GA06",87}};
			student stu2[N];
			int i,n;
			n=fun(stu1,N,stu2);
			cout<<"所有学生数据："<<endl;
			for(i=0;i<N;i++)
			cout<<stu1[i].num<<setw(4)<<stu1[i].score<<endl;
		      cout<<n<<endl;	
			cout<<"低于平均分学生数据："<<endl;
			for(i=0;i<n;i++)
			cout<<stu2[i].num<<setw(4)<<stu2[i].score<<endl;

			//结果写入out.txt 
			ofstream ofile; 
			ofile.open("out.txt");
			ofile<<n<<endl;
			for(i=0;i<n;i++)
			ofile<<stu2[i].num<<setw(4)<<stu2[i].score<<endl;
			ofile.close();
		}





85.             /*
		基于下面的main()函数，写出完整的程序，能够编译和运行；
		程序中的输入文件in.txt包含以下数据：
		1001
		1002
		1003
		定义类Student，包括私有成员变量学号(int)，包括构造函数和析构函数,使得输出文件out.txt包含以下数据： 
		Constructor1001
		Constructor1002
		Constructor1003
		Destructor1003
		Destructor1002
		Destructor1001
		提示：程序使用文件实现输入和输出，不可以用 cin 和 cout ； 
		只能在Begin和End之间输入代码，不能改动程序的任何其余部分。 
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		using namespace std;
		ifstream infile("in.txt");
		ofstream outfile("out.txt");
		/********************** Begin *******************/
		class Student
		{
			private:
				int name;
			public:
				Student(int N)
				{
					name=N;
					outfile<<"Constructor"<<name<<endl;
				}
				~Student()
				{
					outfile<<"Destructor"<<name<<endl;
				}
		 } ;
		/********************** End *********************/

		void  CreateObjects()
		{
		       int n[3];
			infile>>n[0]>>n[1]>>n[2];
			Student s1[3]={n[0],n[1],n[2]};
		}
		int main()
		{

		  if(!infile) return -1;
		  if(!outfile) return -1;

		  CreateObjects();
		  infile.close();
		  outfile.close();
		  return 0;
		}




86.             /*
		定义学生类Student，包括私有成员变量学号(int)、性别(char)、年龄(int)，包括构造函数，用于对私有成员初始化； 
		成员函数Display(ostream &output)用于输出：学号(int)、性别(char)、年龄(int)，将这些数据输出到输出流；
		程序中的输入文件in.txt包含以下数据（3列数据分别表示学号、性别、年龄） ：
		1001 f 18
		1002 m 19
		1003 m 17
		1004 f 18
		1005 f 19
		输出文件out.txt包含以下数据(数据之间用一个空格隔开）：
		1001	f	18
		1002	m	19
		1003	m	17
		1004	f	18
		1005	f	19
		程序从文件in.txt中读取数据，输出到文件out.txt中，不可以用 cin 和 cout ； 
		只能在Begin和End之间输入代码，不能改动程序的任何其余部分。  
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		using namespace std;
		ifstream infile("in.txt");
		ofstream outfile("out.txt");
		/*************************** Begin ************************/
		class Student
		{
			private:
				int a;char b;int c;
			public:
				Student(int x,char y,int z)
				{
					a=x;b=y;c=z;
				}
				void Display(ostream &output)
				{
					outfile<<a<<" "<<b<<" "<<c<<endl;
				}
		 } ;
		/*************************** End **************************/

		int main()
		{
			if(!infile) return -1;
			if(!outfile) return -1;
			int n;char s;int a;
			while(!infile.eof())
			{
				infile>>n>>s>>a;
				Student s1(n,s,a);
				s1.Display(outfile);
			}
			infile.close();
			outfile.close();
			return 0;
		} 




87.             /*插入字符串
		编写一个函数实现：把一个字符串插入到另一个字符串中的指定位置。
		void copys2s(char * src,char * dest,int loc)
		该函数实现将字符串dest插入字符串src中loc的位置。该函数定义可以使用字符串处理函数。
		如：in.txt
		abcdef
		123
		3
		abcdef
		123
		1
		abcdef
		123
		7       
		则：out.txt
		ab123cdef
		123abcdef
		abcdef123
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		#include<iostream>
		#include <string.h>
		using namespace std;
		void copys2s(char * src,char * dest,int loc)
		{
		/************************* Begin *************************/
		char temp[100];
		strcpy(temp,src+loc-1);
		strcpy(src+loc-1,dest);
		int n=strlen(src);
		strcpy(src+n,temp);
		/************************* End ***************************/
		}
		int main()
		{
			ifstream file_in("in.txt");
			ofstream file_out("out.txt"); 
			if(!file_in||!file_out) return -1;
			streambuf *std_in;  
			streambuf *std_out;
			std_in= cin.rdbuf(file_in.rdbuf());  
			std_out= cout.rdbuf(file_out.rdbuf());  

		    char src[100],dest[100];
		    int loc;
		    while(cin>>src>>dest>>loc)
		    {
			copys2s(src,dest,loc);
			cout<<src<<endl;
		    }

			file_in.close();
			file_out.close();
			cin.rdbuf(std_in); 
			cout.rdbuf(std_out);	
			return 0;
		}
		
		
		
88.		/* 回文字符串（指针版）:
		写程序，输入多个字符串，判断输入的字符串是否"回文"，若是回文，输出YES，若不是回文输出NO.
		每个输入的字符串的前端或后端可能包含多个空格，不算作字符串的一部分，不参与判断过程，应该先裁剪掉。
		字符串的内部包含的空格，算作字符串的一部分，要参与判断的过程。
		每个字符串的输入长度（包括所有的空格）不超过100，使用指针pi和pj完成计算过程，定义如下：
		char s[100], *pi, *pj;
		输入包括多个用例，每个用例包含一个字符串（前端或后端或内部可能包含多个空格，字符串的长度不超过100），以换行作为字符串的结束。
		判断输入的字符串是否"回文"，若是回文，输出YES，若不是回文输出NO，以换行结束。
		如：in.txt
		abc  cba
		      abc 12321 cba
		      abc 1221 cba
		abc 123321 cba
		abc 123321  cba
		则:out.txt
		YES
		YES
		YES
		YES
		NO
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		#include <iostream>
		#include <string.h>
		using namespace std;

		int main()
		{
			ifstream file_in("in.txt");
			ofstream file_out("out.txt"); 
			if(!file_in||!file_out) return -1;
			streambuf *std_in;  
			streambuf *std_out;
			std_in= cin.rdbuf(file_in.rdbuf());  
			std_out= cout.rdbuf(file_out.rdbuf());  

			char s[100], *pi, *pj;
			int  n;
			while(cin.getline(s,100))
			{
		/********************************* Begin ****************************/
		n=strlen(s);
		char *p1=s,*p2=s+n-1;
		//删除前后空格
		while(*p1==' ')
		{
			p1++;
		 } 
		while(*p2==' ')
		{
			p2--;
		 } 
		//开始比较
		while((p1<p2)&&(*p1==*p2))
		{
			p1++;p2--;
		 } 
		if(p1<p2)
		cout<<"NO"<<endl;
		else
		cout<<"YES"<<endl;
		/********************************* End ******************************/
			}

			file_in.close();
			file_out.close();
			cin.rdbuf(std_in); 
			cout.rdbuf(std_out);	
			return 0;
		}




89.             /*删除升序数组中的重复元素（指针版）
		编写程序，删除一维数组中所有相同的数，只保留一个，数组中的数已按由小到大的顺序排列，
		int unique(int *pArr,int num)
		pArr和num分别为数组首地址和数组元素的个数，函数返回删除重复元素之后数组中元素个数。
		如：in.txt
		2 2 2 3 4 4 5 6 6 6 6 7 7 8 9 9 10 10 10
		则：out.txt
		2 3 4 5 6 7 8 9 10
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		#include <iostream>
		using namespace std;
		int unique(int *pArr,int num)
		{
		/********************************** Begin ****************************/
		int *p=pArr;               //用p存放新的数组 
		for(int i=0;i<num-1;i++)
		{
			if(pArr[i+1]!=pArr[i])
			{
				p++;
				*p=pArr[i+1];
			}
		 } 
		 int n=p-pArr+1;           //指针可以相减 
		 return n;
		/********************************** End ******************************/
		}
		int main()
		{
			ofstream file_out("out.txt"); 
			if(!file_out) return -1;
			streambuf *std_out;
			std_out= cout.rdbuf(file_out.rdbuf());  

			int a[]={2,2,2,3,4,4,5,6,6,6,6,7,7,8,9,9,10,10,10};
			int num1 = sizeof(a)/sizeof(int);
			int num2 = unique(a,num1);

			cout<<a[0];
			for (int i=1;i<num2;i++)
			{
				cout<<" "<<a[i];
			}
			cout<<'\n';

			file_out.close();
			cout.rdbuf(std_out);	
			return 0;
		}




90.             /*编写函数fun：将一个字符串中的大写字母转换成小写，小写转换成大写，其它字符保持不变。 
		如:in.txt
		HappyNew2019Year
		则:out.txt
		hAPPYnEW2019yEAR
		请在Begin和End之间完善程序。注意：不要删掉注释语句。 
		---------------------------------------------------------------------------------------------------*/
		#include <fstream> 
		using namespace std;
		#include <string.h> 
		/***********Begin**********/
		void fun(char *s)
		{
			char *p = s;
			while(*p!=0)
			{
				if(*p>='A'&&*p<='Z')
					*p = *p+32;
				else
					if(*p>='a'&&*p<='z')
						*p = *p-32;
				p++;
			}
		}
		/***********End***********/

		int main()
		{
			ifstream infile("in.txt",ios::in);//定义输入流文件对象infile 
			ofstream outfile("out.txt",ios::out);//定义输出流文件对象outfile 
			//infile、outfile的用法同cin、cout
			char str[100];
		      while(!infile.eof())
		     {
		       infile.getline(str,100);//从文件in.txt中读入字符串到数组str中 
			fun(str);
			outfile<<str<<endl; //输出字符串到文件out.txt中 
		     }
			infile.close();
			outfile.close();
			return 0;
		}




91.              /*
		定义电影类Movie，包括私有对象成员电影名name(string)，开始时间startTime和结束时间endTime；
		startTime和endTime是Time类的对象；Time类包括公有成员hour(int)，minute(int)和构造函数； 
		Movie类包括构造函数，求电影时长(多少分钟)的函数 int Duration()，显示电影播放信息的函数Display(ofstream &output); 
		程序中的输入文件in.txt包含以下数据:
		The Fast and the Furious 8
		12 30 14 50
		Smurfs: The Lost Village
		13 9 15 45
		Battle of Memories
		15 20 16 54
		输出文件out.txt包含以下数据（英文冒号）：
		The Fast and the Furious 8
		start time:12:30
		140minutes
		Smurfs: The Lost Village
		start time:13:9
		156minutes
		Battle of Memories
		start time:15:20
		94minutes
		程序从文件in.txt中读取数据，输出到文件out.txt中，不可以用 cin 和 cout ； 
		只能在Begin和End之间输入代码，不能改动程序的任何其余部分。 
		----------------------------------------------------------------------------------------------------*/
		#include <fstream>
		using namespace std;
		ifstream infile("in.txt");
		ofstream outfile("out.txt");
		/****************************** Begin ************************/
		class Time
		{
			public:
				int hour;
				int minute;
				Time(int a=0,int b=0)
				{
					hour=a;minute=b;
				}
		};
		class Movie
		{
			private:
				string name;
				Time startTime,endTime;
			public:
				Movie(string a,Time &b,Time &c)
				{
					name=a;startTime=b;endTime=c;
				}
				int Duration()
				{
					int t;
					t=(endTime.hour-startTime.hour)*60+(endTime.minute-startTime.minute);
					return t;
				}
				void Display(ofstream &output)
				{
					output<<name<<'\n'<<"start time:"<<startTime.hour<<':'<<startTime.minute<<'\n';
				}
		 }; 
		/****************************** End **************************/

		int main()
		{ 
			if(!infile) return -1;
			if(!outfile) return -1;

			string str;
			int hour1,minute1,hour2,minute2;

			while(!infile.eof())
			{
				getline(infile,str);
				infile>>hour1>>minute1>>hour2>>minute2;
				infile.ignore();
				Time startT(hour1,minute1),endT(hour2,minute2);
				Movie mov(str,startT,endT);
				mov.Display(outfile);
				outfile<<mov.Duration()<<"minutes"<<endl;
			}

			infile.close();
			outfile.close();	
			return 0;
		}




92.             /* 回文字符串（指针版）:
		写程序，输入多个字符串，判断输入的字符串是否"回文"，若是回文，输出YES，若不是回文输出NO.
		每个输入的字符串的前端或后端可能包含多个空格，不算作字符串的一部分，不参与判断过程，应该先裁剪掉。
		字符串的内部包含的空格，算作字符串的一部分，要参与判断的过程。
		每个字符串的输入长度（包括所有的空格）不超过100，使用指针pi和pj完成计算过程，定义如下：
		char s[100], *pi, *pj;
		输入包括多个用例，每个用例包含一个字符串（前端或后端或内部可能包含多个空格，字符串的长度不超过100），以换行作为字符串的结束。
		判断输入的字符串是否"回文"，若是回文，输出YES，若不是回文输出NO，以换行结束。
		如：in.txt
		abc  cba
		      abc 12321 cba
		      abc 1221 cba
		abc 123321 cba
		abc 123321  cba
		则:out.txt
		YES
		YES
		YES
		YES
		NO
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		#include <iostream>
		#include <string.h>
		using namespace std;

		int main()
		{
			ifstream file_in("in.txt");
			ofstream file_out("out.txt"); 
			if(!file_in||!file_out) return -1;
			streambuf *std_in;  
			streambuf *std_out;
			std_in= cin.rdbuf(file_in.rdbuf());  
			std_out= cout.rdbuf(file_out.rdbuf());  

			char s[100], *pi, *pj;
			int  n;
			while(cin.getline(s,100))
			{
		/********************************* Begin ****************************/
		n=strlen(s);
		char *p1=s,*p2=s+n-1;
		while(*p1==' ')
		{
			p1++;
		 } 
		while(*p2==' ')
		{
			p2--;
		}
		while((p1<p2)&&(*p1==*p2))
		{
			p1++;p2--;
		}
		if(p1<p2)
		cout<<"NO"<<endl;
		else
		cout<<"YES"<<endl;
		/********************************* End ******************************/
			}

			file_in.close();
			file_out.close();
			cin.rdbuf(std_in); 
			cout.rdbuf(std_out);	
			return 0;
		}



93.             /*删除升序数组中的重复元素（指针版）
		编写程序，删除一维数组中所有相同的数，只保留一个，数组中的数已按由小到大的顺序排列，
		int unique(int *pArr,int num)
		pArr和num分别为数组首地址和数组元素的个数，函数返回删除重复元素之后数组中元素个数。
		如：in.txt
		2 2 2 3 4 4 5 6 6 6 6 7 7 8 9 9 10 10 10
		则：out.txt
		2 3 4 5 6 7 8 9 10
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		#include <iostream>
		using namespace std;
		int unique(int *pArr,int num)
		{
		/********************************** Begin ****************************/
		int *p=pArr;
		for(int i=0;i<num-1;i++)
		{
			if(pArr[i+1]!=pArr[i])
			{
				p++;
				*p=pArr[i+1];
			}
		 } 
		 return p-pArr+1;
		/********************************** End ******************************/
		}
		int main()
		{
			ofstream file_out("out.txt"); 
			if(!file_out) return -1;
			streambuf *std_out;
			std_out= cout.rdbuf(file_out.rdbuf());  

			int a[]={2,2,2,3,4,4,5,6,6,6,6,7,7,8,9,9,10,10,10};
			int num1 = sizeof(a)/sizeof(int);
			int num2 = unique(a,num1);

			cout<<a[0];
			for (int i=1;i<num2;i++)
			{
				cout<<" "<<a[i];
			}
			cout<<'\n';

			file_out.close();
			cout.rdbuf(std_out);	
			return 0;
		}



94.             /*编写函数fun：将一个字符串中的大写字母转换成小写，小写转换成大写，其它字符保持不变。 
		如:in.txt
		HappyNew2019Year
		则:out.txt
		hAPPYnEW2019yEAR
		请在Begin和End之间完善程序。注意：不要删掉注释语句。 
		---------------------------------------------------------------------------------------------------*/
		#include <fstream> 
		using namespace std;
		#include <string.h> 
		/***********Begin**********/
		void fun(char str[])
		{
			int n=strlen(str);
			for(int i=0;i<n;i++)
			{
				if(str[i]>='a'&&str[i]<='z')
				str[i]-=32;
				else if(str[i]>='A'&&str[i]<='Z')
				str[i]+=32;
			}
		 } 
		/***********End***********/

		int main()
		{
			ifstream infile("in.txt",ios::in);//定义输入流文件对象infile 
			ofstream outfile("out.txt",ios::out);//定义输出流文件对象outfile 
			//infile、outfile的用法同cin、cout
			char str[100];
		      while(!infile.eof())
		     {
		       infile.getline(str,100);//从文件in.txt中读入字符串到数组str中 
			fun(str);
			outfile<<str<<endl; //输出字符串到文件out.txt中 
		     }
			infile.close();
			outfile.close();
			return 0;
		}




95.             /*查找字符串
		编写一个函数实现：在一个字符串中查找另一个给定的字符串首次出现的位置。
		int find(char * strSrc, char * strFind)
		该函数在字符串strSrc中查找字符串srcFind首次出现的位置，并返回一个整数表示该位置，返回-1表示查找失败或未找到。
		如：in.txt
		Welcome to the C++ world!
		C++
		WelcomeC++ to the C++ world!
		C++
		C++Welcome to the world!
		C++
		Welcome to the worldC++
		C++
		Welcome to the worldC+
		C++        
		则:out.txt
		16
		8
		1
		21
		-1
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		#include<iostream>
		#include <string.h>
		using namespace std;
		int find(char * strSrc, char * strFind)
		{
		/***************************** Begin ******************************/
		int n1=strlen(strSrc),n2=strlen(strFind);
		int i,j;
		if(n1<n2)
		return -1;
		for(i=0;i<=n1-n2;i++)
		{
			for(j=0;j<n2;j++)
			{
				if(strSrc[i+j]!=strFind[j])
				break;
			}
			if(j==n2)
			return i+1;
		 } 
		 return -1;
		/***************************** End ********************************/
		}

		int main()
		{
			ifstream file_in("in.txt");
			ofstream file_out("out.txt"); 
			if(!file_in||!file_out) return -1;
			streambuf *std_in;  
			streambuf *std_out;
			std_in= cin.rdbuf(file_in.rdbuf());  
			std_out= cout.rdbuf(file_out.rdbuf());  

			char strSrc[100],strFind[100];
			while(cin.getline(strSrc,100)&&cin.getline(strFind,100))
				cout<<find(strSrc,strFind)<<"\n";

			file_in.close();
			file_out.close();
			cin.rdbuf(std_in); 
			cout.rdbuf(std_out);	
			return 0;
		}




96.             /*请编写一个函数fun,将一个数字字符串转换为一个整数。
		如：in.txt
		-1234
		则:out.txt
		-1234
		注意:请勿改动现有任何内容，仅在Begin和End之间补充代码。
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		using namespace std; 
		 /**********  Begin  **********/
		 int fun(char *s)
		 {
			int flag=1;
			if (*s=='-')
			{
				flag=-1;
				s++;
			 }
			int p=0;
			while(*s)
			{
				p=p*10+(*s-48);
				s++;
			 }
			 return p*flag;
		  } 
		 /**********   End  ***********/

		int main()
		{ 
			ifstream infile("in.txt",ios::in);    //定义输入文件流类对象infile
			ofstream outfile("out.txt",ios::out); //定义输出文件流类对象outfile
		      //infile、outfile与cin、cout用法相同

			char s[10];

			while(infile>>s)
				outfile<<fun(s)<<endl;

			infile.close();
			outfile.close();
			return 0;
		}




97.             /*编写函数fun实现两个整数的交换。
		如:in.txt
		60 65
		则:out.txt
		a=65 b=60
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include<fstream>
		using namespace std;
		void fun(int *a,int *b)
		{
		  /**********Begin**********/
		int t;
		t=*a;*a=*b;*b=t; 
		  /**********  End  **********/
		} 
		int main()
		{
		  ifstream infile("in.txt",ios::in);  //创建输入文件流类对象infile 
		  ofstream outfile("out.txt",ios::out);//创建输出文件流类对象outfile
		  //infile和outfile用法与cin和cout一样 

		  int a,b;
		  while(infile>>a>>b)
		  {   
		    fun(&a,&b);
		    outfile<<"a="<<a<<' '<<"b="<<b<<'\n';
		  }

		  infile.close();   //关闭文件in.txt 
		  outfile.close();	//关闭文件out.txt 
		  return 0;
		}



98.              /*
		设计函数fun:从保存n个学生记录的stu1数组中，找出成绩在60和80分之间（包括60和80）的学生数据，并保存在sut2数组中，函数返回值表示找到的学生人数。
		其中，学生记录由学号和成绩组成。
		请勿改动主函数main和其他函数中的任何内容，仅在函数fun的花括号中填入你编写的若干语句。
		------------------------------------------------------------------------------------------------------------------------------------*/
		#include <iostream>
		using namespace std;
		#include<fstream>
		#include<iomanip>
		#define N 16
		struct student
		{   
		   char num[10];
		    int score;
		};
		int fun(student stu1[],int n,student stu2[])
		{

		    /**********  Begin  **********/
		    int t=0;
		for(int i=0;i<n;i++)
		{
			if(stu1[i].score>=60&&stu1[i].score<=80)
			{
				stu2[t]=stu1[i];
				t++;
			}
		 } 
		 return t;
		    /**********   End  ***********/

		}

		int main()
		{  
			student stu1[N]={{"GA05",85},{"GA03",76},{"GA02",69},{"GA04",85},{"GA01",91},{"GA07",72},{"GA08",64},{"GA06",87},{"GA015",85},{"GA013",91},{"GA012",64},{"GA014",91},{"GA011",91},{"GA017",64},{"GA018",64},{"GA016",72}};
			student stu2[N];
			int i,n;
			n=fun(stu1,N,stu2);
			cout<<"所有的学生数据："<<endl;
			for(i=0;i<N;i++)
			cout<<stu1[i].num<<setw(4)<<stu1[i].score<<endl;
			cout<<"60-80分之间的学生数据："<<endl;
			for(i=0;i<n;i++)
			cout<<stu2[i].num<<setw(4)<<stu2[i].score<<endl;

		       //结果写入out.txt 
			ofstream ofile; 
			ofile.open("out.txt");
			ofile<<n<<endl;
			for(i=0;i<n;i++)
			ofile<<stu2[i].num<<setw(4)<<stu2[i].score<<endl;
			ofile.close();
		}







99.             /*
		基于下面的main()函数，写出完整的程序，能够编译和运行；
		程序中的输入文件in.txt包含以下数据:
		Huawei
		Sumsung
		iPhone7 
		定义类Phone，包括私有成员变量name(string)，包括构造函数，成员函数setName()修改name,
		常成员函数getName()获得name，使得输出文件out.txt包含以下数据;
		Huawei
		Sumsung
		iPhone7
		提示：程序使用文件实现输入和输出，不可以用 cin 和 cout ； 
		只能在Begin和End之间输入代码，不能改动程序的任何其余部分。 
		---------------------------------------------------------------------------------------------------*/
		#include<string>
		#include<fstream>
		using namespace std;
		ifstream infile("in.txt");
		ofstream outfile("out.txt");
		/*************************** Begin **********************/
		class Phone
		{
			private:
				string name;
			public:
				Phone(){
				}
				Phone(string N)
				{
					name=N;
				}
				void setName(string n)
				{
					name=n; 
				}
				string getName() const
				{
					return name;
				}
		 } ;
		/*************************** End ************************/

		int main()
		{
			if(!infile) return -1;
			if(!outfile) return -1;

			Phone ph1,ph2;
			string name;
			infile>>name;
			ph1.setName(name);
			infile>>name;
			ph2.setName(name);
			Phone const *pPhone = &ph1;
			outfile<<pPhone->getName()<<endl;
			pPhone = &ph2;
			outfile<<pPhone->getName()<<endl;

			infile>>name;
			const Phone ph3(name);	
			outfile<<ph3.getName()<<endl;

			infile.close();
			outfile.close();
			return 0;
		}




100.		/*删除升序数组中的重复元素（指针版）
		编写程序，删除一维数组中所有相同的数，只保留一个，数组中的数已按由小到大的顺序排列，
		int unique(int *pArr,int num)
		pArr和num分别为数组首地址和数组元素的个数，函数返回删除重复元素之后数组中元素个数。
		如：in.txt
		2 2 2 3 4 4 5 6 6 6 6 7 7 8 9 9 10 10 10
		则：out.txt
		2 3 4 5 6 7 8 9 10
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		#include <iostream>
		using namespace std;
		int unique(int *pArr,int num)
		{
		/********************************** Begin ****************************/
		int *p=pArr;
		for(int i=0;i<num-1;i++)
		{
			if(pArr[i+1]!=pArr[i])
			{	p++;
				*p=pArr[i+1];
			}
		 } 
		 return p-pArr+1;
		/********************************** End ******************************/
		}
		int main()
		{
			ofstream file_out("out.txt"); 
			if(!file_out) return -1;
			streambuf *std_out;
			std_out= cout.rdbuf(file_out.rdbuf());  

			int a[]={2,2,2,3,4,4,5,6,6,6,6,7,7,8,9,9,10,10,10};
			int num1 = sizeof(a)/sizeof(int);
			int num2 = unique(a,num1);

			cout<<a[0];
			for (int i=1;i<num2;i++)
			{
				cout<<" "<<a[i];
			}
			cout<<'\n';

			file_out.close();
			cout.rdbuf(std_out);	
			return 0;
		}




101.		/* 回文字符串（指针版）:
		写程序，输入多个字符串，判断输入的字符串是否"回文"，若是回文，输出YES，若不是回文输出NO.
		每个输入的字符串的前端或后端可能包含多个空格，不算作字符串的一部分，不参与判断过程，应该先裁剪掉。
		字符串的内部包含的空格，算作字符串的一部分，要参与判断的过程。
		每个字符串的输入长度（包括所有的空格）不超过100，使用指针pi和pj完成计算过程，定义如下：
		char s[100], *pi, *pj;
		输入包括多个用例，每个用例包含一个字符串（前端或后端或内部可能包含多个空格，字符串的长度不超过100），以换行作为字符串的结束。
		判断输入的字符串是否"回文"，若是回文，输出YES，若不是回文输出NO，以换行结束。
		如：in.txt
		abc  cba
		      abc 12321 cba
		      abc 1221 cba
		abc 123321 cba
		abc 123321  cba
		则:out.txt
		YES
		YES
		YES
		YES
		NO
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		#include <iostream>
		#include <string.h>
		using namespace std;

		int main()
		{
			ifstream file_in("in.txt");
			ofstream file_out("out.txt"); 
			if(!file_in||!file_out) return -1;
			streambuf *std_in;  
			streambuf *std_out;
			std_in= cin.rdbuf(file_in.rdbuf());  
			std_out= cout.rdbuf(file_out.rdbuf());  

			char s[100], *pi, *pj;
			int  n;
			while(cin.getline(s,100))
			{
		/********************************* Begin ****************************/
		n=strlen(s);
		char *p1=s,*p2=s+n-1;
		while(*p1==' ')
		{
			p1++;
		 } 
		 while(*p2==' ')
		 {
			p2--;
		 }
		 while((p1<p2)&&(*p1==*p2))
		 {
			p1++;p2--;
		 }
		 if(p1<p2)
		 cout<<"NO"<<endl;
		 else
		 cout<<"YES"<<endl;
		/********************************* End ******************************/
			}

			file_in.close();
			file_out.close();
			cin.rdbuf(std_in); 
			cout.rdbuf(std_out);	
			return 0;
		}



102.		/*查找字符串
		编写一个函数实现：在一个字符串中查找另一个给定的字符串首次出现的位置。
		int find(char * strSrc, char * strFind)
		该函数在字符串strSrc中查找字符串srcFind首次出现的位置，并返回一个整数表示该位置，返回-1表示查找失败或未找到。
		如：in.txt
		Welcome to the C++ world!
		C++
		WelcomeC++ to the C++ world!
		C++
		C++Welcome to the world!
		C++
		Welcome to the worldC++
		C++
		Welcome to the worldC+
		C++        
		则:out.txt
		16
		8
		1
		21
		-1
		注意：请勿改动主函数main和其它函数中的任何内容，仅在Begin和End之间填入你编写的若干语句
		---------------------------------------------------------------------------------------------------*/
		#include <fstream>
		#include<iostream>
		#include <string.h>
		using namespace std;
		int find(char * strSrc, char * strFind)
		{
		/***************************** Begin ******************************/
		int n1=strlen(strSrc),n2=strlen(strFind) ;
		int i,j;
		if(n1<n2)
		return -1;
		for(i=0;i<n1-n2;i++)
		{
			for(j=0;j<n2;j++)
			{
				if(strSrc[i+j]==strFind[j])
				break;
			}
			if(j==n2)
			return i+1;
		}
		return -1;
		/***************************** End ********************************/
		}

		int main()
		{
			ifstream file_in("in.txt");
			ofstream file_out("out.txt"); 
			if(!file_in||!file_out) return -1;
			streambuf *std_in;  
			streambuf *std_out;
			std_in= cin.rdbuf(file_in.rdbuf());  
			std_out= cout.rdbuf(file_out.rdbuf());  

			char strSrc[100],strFind[100];
			while(cin.getline(strSrc,100)&&cin.getline(strFind,100))
				cout<<find(strSrc,strFind)<<"\n";

			file_in.close();
			file_out.close();
			cin.rdbuf(std_in); 
			cout.rdbuf(std_out);	
			return 0;
		}




103.		
